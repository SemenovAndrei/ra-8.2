{"version":3,"sources":["hooks/useJsonFetch.js","components/TestData/TestData.jsx","components/TestError/TestError.jsx","components/ShowSpinner/Loading_icon.gif","components/ShowSpinner/ShowSpinner.jsx","components/TestLoading/TestLoading.jsx","App.js","reportWebVitals.js","index.js"],"names":["useJsonFetch","url","options","useState","data","setData","error","setError","loading","setLoading","useEffect","a","fetch","response","status","Error","statusText","ok","json","getData","TestData","process","message","map","key","TestError","Spinner","styled","img","ShowSpinner","src","spinner","alt","TestLoading","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAEe,SAASA,EAAaC,EAAKC,GAAU,IAAD,EACzBC,mBAAS,IADgB,mBAC1CC,EAD0C,KACpCC,EADoC,OAEvBF,mBAAS,IAFc,mBAE1CG,EAF0C,KAEnCC,EAFmC,OAGnBJ,oBAAS,GAHU,mBAG1CK,EAH0C,KAGjCC,EAHiC,KAqCjD,OAhCAC,qBAAU,YACK,uCAAG,8BAAAC,EAAA,6DACdF,GAAW,GACXF,EAAS,IAFK,kBAKWK,MAAMX,EAAKC,GALtB,UAOY,OAFlBW,EALM,QAOCC,OAPD,sBAQJ,IAAIC,MACR,kBAAoBF,EAASC,OAAS,MAAQD,EAASG,YAT/C,WAaRH,EAASI,GAbD,kCAcSJ,EAASK,OAdlB,WAcJA,EAdI,8BAiBF,IAAIH,MAAM,iBAjBR,QAmBVV,EAAQa,GAnBE,0DAsBZX,EAAS,EAAD,IAtBI,yBAwBZE,GAAW,GAxBC,6EAAH,qDA4BbU,KACC,CAACjB,EAASD,IAEN,CAACO,EAASF,EAAOF,G,WCxBXgB,MAZf,WAAqB,IAAD,EACapB,EAAaqB,2CAD1B,mBACXb,EADW,KACFF,EADE,KACKF,EADL,KAGlB,OACE,gCACGI,GAAW,0CACXF,GAAS,8BAAMA,EAAMgB,UACrBlB,GAAQ,CAACA,GAAMmB,KAAI,SAACC,GAAD,OAAS,4CAAgCA,EAAIV,SAA1BU,EAAIV,eCPlC,SAASW,IAAa,IAAD,EACHzB,EAAaqB,4CADV,mBAC3Bb,EAD2B,KAClBF,EADkB,KACXF,EADW,KAGlC,OACE,gCACGI,GAAW,0CACXF,GAAS,8BAAMA,EAAMgB,UACrBlB,GAAQ,CAACA,GAAMmB,KAAI,SAACC,GAAD,OAAS,4CAAgCA,EAAIV,SAA1BU,EAAIV,c,sBCVlC,MAA0B,yCCInCY,EAAUC,IAAOC,IAAV,+DAKE,SAASC,IACtB,OAAO,cAACH,EAAD,CAASI,IAAKC,EAASC,IAAI,YCNrB,SAASC,IAAe,IAAD,EACLjC,EAAaqB,8CADR,mBAC7Bb,EAD6B,KACpBF,EADoB,KACbF,EADa,KAGpC,OACE,gCACGI,GAAW,cAACqB,EAAD,IACXvB,GAAS,8BAAMA,EAAMgB,UACrBlB,GAAQ,CAACA,GAAMmB,KAAI,SAACC,GAAD,OAAS,4CAAgCA,EAAIV,SAA1BU,EAAIV,cCIlCoB,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACV,EAAD,IACA,cAACQ,EAAD,QCESG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bcabdba2.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport default function useJsonFetch(url, options) {\n  const [data, setData] = useState('')\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true)\n      setError('')\n\n      try {\n        const response = await fetch(url, options)\n\n        if (response.status !== 200) {\n          throw new Error(\n            'Network error: ' + response.status + ' - ' + response.statusText\n          )\n        }\n\n        if (response.ok) {\n          const json = await response.json()\n\n          if (!json) {\n            throw new Error('parsing error')\n          }\n          setData(json)\n        }\n      } catch (e) {\n        setError(e)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    getData()\n  }, [options, url])\n\n  return [loading, error, data]\n}\n","import React from 'react'\nimport useJsonFetch from '../../hooks/useJsonFetch'\n\nfunction TestData() {\n  const [loading, error, data] = useJsonFetch(process.env.REACT_APP_URL_DATA)\n\n  return (\n    <div>\n      {loading && <div>Loading</div>}\n      {error && <div>{error.message}</div>}\n      {data && [data].map((key) => <div key={key.status}>Status : {key.status}</div>)}\n    </div>\n  )\n}\n\nexport default TestData\n","import React from 'react'\nimport useJsonFetch from '../../hooks/useJsonFetch'\n\nexport default function TestError() {\n  const [loading, error, data] = useJsonFetch(process.env.REACT_APP_URL_ERROR)\n\n  return (\n    <div>\n      {loading && <div>Loading</div>}\n      {error && <div>{error.message}</div>}\n      {data && [data].map((key) => <div key={key.status}>Status : {key.status}</div>)}\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Loading_icon.1a32f552.gif\";","import React from 'react'\nimport styled from 'styled-components'\nimport spinner from './Loading_icon.gif'\n\nconst Spinner = styled.img`\n  width: 100px;\n  height: 100px;\n`\n\nexport default function ShowSpinner() {\n  return <Spinner src={spinner} alt=\"Loading\"></Spinner>\n}\n","import React from 'react'\nimport useJsonFetch from '../../hooks/useJsonFetch'\nimport ShowSpinner from '../ShowSpinner/ShowSpinner'\n\nexport default function TestLoading() {\n  const [loading, error, data] = useJsonFetch(process.env.REACT_APP_URL_LOADING)\n\n  return (\n    <div>\n      {loading && <ShowSpinner />}\n      {error && <div>{error.message}</div>}\n      {data && [data].map((key) => <div key={key.status}>Status : {key.status}</div>)}\n    </div>\n  )\n}\n","import './App.css'\nimport TestData from './components/TestData/TestData'\nimport TestError from './components/TestError/TestError'\nimport TestLoading from './components/TestLoading/TestLoading'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TestData />\n      <TestError />\n      <TestLoading />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}